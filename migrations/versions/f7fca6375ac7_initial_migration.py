"""initial migration

Revision ID: f7fca6375ac7
Revises: 
Create Date: 2025-07-31 18:21:48.769521

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f7fca6375ac7'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('clients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_name', sa.String(length=100), nullable=False),
    sa.Column('api_key', sa.String(length=128), nullable=False),
    sa.Column('referral_code', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('company_name'),
    schema='neondb'
    )
    with op.batch_alter_table('clients', schema='neondb') as batch_op:
        batch_op.create_index(batch_op.f('ix_neondb_clients_api_key'), ['api_key'], unique=True)
        batch_op.create_index(batch_op.f('ix_neondb_clients_referral_code'), ['referral_code'], unique=True)

    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('password_hash', sa.String(length=256), nullable=True),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('gender', sa.String(length=20), nullable=True),
    sa.Column('weight_kg', sa.Float(), nullable=True),
    sa.Column('height_cm', sa.Float(), nullable=True),
    sa.Column('fitness_goals', sa.Text(), nullable=True),
    sa.Column('workouts_per_week', sa.String(length=10), nullable=True),
    sa.Column('workout_duration', sa.Integer(), nullable=True),
    sa.Column('disliked_foods', sa.Text(), nullable=True),
    sa.Column('allergies', sa.Text(), nullable=True),
    sa.Column('health_conditions', sa.Text(), nullable=True),
    sa.Column('sleep_hours', sa.String(length=10), nullable=True),
    sa.Column('stress_level', sa.String(length=20), nullable=True),
    sa.Column('activity_level', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['neondb.clients.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email', 'client_id', name='_email_client_uc'),
    sa.UniqueConstraint('username', 'client_id', name='_username_client_uc'),
    schema='neondb'
    )
    op.create_table('achievement',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('unlocked_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['neondb.clients.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['neondb.user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='neondb'
    )
    op.create_table('diet_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('meal_name', sa.String(length=100), nullable=False),
    sa.Column('food_items', sa.Text(), nullable=True),
    sa.Column('calories', sa.Integer(), nullable=True),
    sa.Column('protein_g', sa.Float(), nullable=True),
    sa.Column('carbs_g', sa.Float(), nullable=True),
    sa.Column('fat_g', sa.Float(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['neondb.clients.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['neondb.user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='neondb'
    )
    op.create_table('diet_plan',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('generated_plan', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['neondb.clients.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['neondb.user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='neondb'
    )
    op.create_table('measurement_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('waist_cm', sa.Float(), nullable=True),
    sa.Column('chest_cm', sa.Float(), nullable=True),
    sa.Column('arms_cm', sa.Float(), nullable=True),
    sa.Column('hips_cm', sa.Float(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['neondb.clients.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['neondb.user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='neondb'
    )
    op.create_table('membership',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('plan', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['neondb.clients.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['neondb.user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='neondb'
    )
    op.create_table('weight_entry',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('weight_kg', sa.Float(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['neondb.clients.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['neondb.user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='neondb'
    )
    op.create_table('workout_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['neondb.clients.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['neondb.user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='neondb'
    )
    op.create_table('workout_plan',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('generated_plan', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['neondb.clients.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['neondb.user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='neondb'
    )
    op.create_table('exercise_entry',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('sets', sa.Integer(), nullable=False),
    sa.Column('reps', sa.Integer(), nullable=False),
    sa.Column('weight', sa.Float(), nullable=False),
    sa.Column('workout_log_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['neondb.clients.id'], ),
    sa.ForeignKeyConstraint(['workout_log_id'], ['neondb.workout_log.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='neondb'
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('exercise_entry', schema='neondb')
    op.drop_table('workout_plan', schema='neondb')
    op.drop_table('workout_log', schema='neondb')
    op.drop_table('weight_entry', schema='neondb')
    op.drop_table('membership', schema='neondb')
    op.drop_table('measurement_log', schema='neondb')
    op.drop_table('diet_plan', schema='neondb')
    op.drop_table('diet_log', schema='neondb')
    op.drop_table('achievement', schema='neondb')
    op.drop_table('user', schema='neondb')
    with op.batch_alter_table('clients', schema='neondb') as batch_op:
        batch_op.drop_index(batch_op.f('ix_neondb_clients_referral_code'))
        batch_op.drop_index(batch_op.f('ix_neondb_clients_api_key'))

    op.drop_table('clients', schema='neondb')
    # ### end Alembic commands ###
